# -*- coding: utf-8 -*-
"""250709_SemiSupervised_V01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YWzHTSTYXLrA8n5o9p6HYrBJDe0JoYJG
"""

# --- Welding NOK Detection: First Step Code ---
# This script prepares your semi-supervised pipeline foundation with your actual constraints.
# It:
# 1) Accepts ZIP uploads
# 2) Segments beads with your thresholding method
# 3) Shows bead count heatmap
# 4) Loads your provided suspected NOK bead list
# 5) Prepares for correlation + FFT + envelope deviation analysis

import zipfile
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import io
import streamlit as st
from scipy.signal import hilbert
from scipy.fft import fft, fftfreq

# --- Bead Segmentation ---
def segment_beads(df, column, threshold):
    start_indices = []
    end_indices = []
    signal = df[column].to_numpy()
    i = 0
    while i < len(signal):
        if signal[i] > threshold:
            start = i
            while i < len(signal) and signal[i] > threshold:
                i += 1
            end = i - 1
            start_indices.append(start)
            end_indices.append(end)
        else:
            i += 1
    return list(zip(start_indices, end_indices))

# --- Streamlit App ---
st.title("Welding NOK Detection - Prototype Step 1")

uploaded_zip = st.file_uploader("Upload ZIP containing CSV files", type="zip")

if uploaded_zip:
    with zipfile.ZipFile(uploaded_zip, "r") as z:
        csv_files = [f for f in z.namelist() if f.endswith(".csv")]
        st.write(f"Found {len(csv_files)} CSV files in ZIP.")

        # Load sample CSV to let user select filter column
        sample_csv = pd.read_csv(z.open(csv_files[0]))
        selected_column = st.selectbox("Select filter column for segmentation:", sample_csv.columns)
        threshold_value = st.number_input("Input threshold value for segmentation:", value=float(sample_csv[selected_column].mean()))

        if st.button("Segment Beads and Show Heatmap"):
            bead_counts = pd.DataFrame(index=csv_files)

            for csv_file in csv_files:
                df = pd.read_csv(z.open(csv_file))
                segments = segment_beads(df, selected_column, threshold_value)
                bead_counts.loc[csv_file, "Bead Count"] = len(segments)

            plt.figure(figsize=(10, max(4, len(csv_files) * 0.3)))
            sns.heatmap(bead_counts.fillna(0), annot=True, fmt=".0f", cmap="YlGnBu")
            plt.title("Bead Count per CSV File")
            st.pyplot(plt)

# --- Suspected NOK List Provided by Field ---
suspected_NOK = {
    "RH_250418_000001_All_68P_RH_01,02NG.csv": [1, 2],
    "RH_250421_160001_TypeA_68p_Gap_Bead67_68NG": [67, 68],
    "LH_250424_123949_LH_A_64P_ALL_47NG": [47]
}

st.info(f"Suspected NOK beads (from field): {suspected_NOK}")

st.write("### Next Steps:")
st.write("✅ Align segmented beads with suspected NOK list.")
st.write("✅ Prepare correlation + FFT + envelope extraction for anomaly detection.")
st.write("✅ Allow review and visualization per bead for human-in-the-loop checks.")

# This script is ready for testing as your first pipeline anchor before adding feature extraction.